name: CI Local

# üè† LOCAL DEVELOPMENT ONLY
# This workflow is designed exclusively for local testing using `act`.
# It will NOT run on GitHub servers due to the ACT environment checks.
# 
# Usage: act workflow_dispatch -W .github/workflows/ci-local.yml

on:
  # Only manual trigger - designed for local testing with `act`
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo check
        run: cargo check

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Simplified matrix for local testing - only test the most common combination
        # Full matrix testing (multiple OS/rust versions) happens on GitHub CI
        os: [ubuntu-latest]
        rust: [stable]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install ${{ matrix.rust }} toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run cargo test
        run: cargo test --verbose

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate coverage report
        run: |
          # Generate coverage in multiple formats (same as CI)
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
          cargo llvm-cov --all-features --workspace --summary-only > coverage-summary.txt
          cargo llvm-cov --all-features --workspace --html

      - name: Display coverage summary (local)
        run: |
          echo "## üìä Code Coverage Report (Local)" 
          echo ""
          echo "### Summary"
          echo '```'
          cat coverage-summary.txt
          echo '```'
          echo ""
          echo "### Local Files Generated"
          echo "- **LCOV Report**: lcov.info"
          echo "- **HTML Report**: target/llvm-cov/html/"
          echo "- **Summary**: coverage-summary.txt"
          echo ""
          echo "‚ÑπÔ∏è  Artifact upload disabled for local CI"

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-

      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install cargo-audit
        uses: taiki-e/install-action@cargo-audit

      - name: Run cargo audit
        run: cargo audit

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install MSRV toolchain (1.82.0)
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.82.0

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-latest-cargo-msrv-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-msrv-
            ubuntu-latest-cargo-

      - name: Check MSRV
        run: cargo check

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-latest-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-cargo-

      - name: Check documentation
        run: cargo doc --no-deps --document-private-items

  # This job ensures all CI jobs pass
  ci:
    name: CI
    if: always()
    needs:
      - check
      - test
      - coverage
      - fmt
      - clippy
      - security_audit
      - msrv
      - docs
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: exit 1 